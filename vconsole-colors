#!/bin/sh
# vim:ft=sh:noet:ts=3:sw=3:

[ -n "$DEBUG" ] && set -x

## Who am I?
_SELF="${0##*/}"

## stdin: heredoc text
_print_heredoc() {
	local __heredoc_text __line
	local __lfcr="$(printf "%b" "\012\015")"
	while IFS="$__lfcr" read -r __line
	do __heredoc_text="$__heredoc_text$__line$__lfcr"
	done
	printf "%s" "$__heredoc_text"
}

## $1: exit code (defaults to 0)
## $2: unknown option
_usage() {
	local __exit_code="${1:-0}"
	local __unknown_option="$2"
	[ -n "$__unknown_option" ] && echo "$_SELF: invalid option -- '$__unknown_option'" >&2
	_print_heredoc <<ENDUSAGETEXT
Usage: $_SELF [OPERATION]

  OPERATIONS:
   get*
   parse
   set [CONSOLE]

  -h --help
  --usage
ENDUSAGETEXT
	exit "$__exit_code"
}

## $1: base16 value
_hex2dec() {
	local __hex_value="$1"
	printf "%d" "0x$__hex_value"
}

## $1: base10 value
_dec2hex() {
	local __dec_value="$1"
	printf "%.2x" "$__dec_value"
}

## get the current color variables
_get() {
	local __i __c
	local __c0 __c1 __c2 __c3 __c4 __c5 __c6 __c7 __c8 __c9 __c10 __c11 __c12 __c13 __c14 __c15 # read values
	local __cl0 __cl1 __cl2 __cl3 __cl4 __cl5 __cl6 __cl7 __cl8 __cl9 __cl10 __cl11 __cl12 __cl13 __cl14 __cl15 # processed values

	for __c in "red" "grn" "blu"
	do
		IFS=',' read -r __c0 __c1 __c2 __c3 __c4 __c5 __c6 __c7 __c8 __c9 __c10 __c11 __c12 __c13 __c14 __c15 <"/sys/module/vt/parameters/default_$__c"
		__i=0
		while [ "$__i" -le 15 ]
		do
			eval "__cl$__i=\"\${__cl$__i:-\$(_dec2hex \${__c$__i})}\${__cl$__i:+,\$(_dec2hex \${__c$__i})}\""
			__i="$((__i + 1))"
		done
	done

	__i=0
	while [ "$__i" -le 15 ]
	do
		eval "echo COLOR_$__i=\"\${__cl$__i}\""
		__i="$((__i + 1))"
	done
}

## parse /etc/vconsole.conf into vtrgb
_parse() {
	local __i __j __c __rgb
	local __r __g __b # read values
	local __red __grn __blu # processed values
	local IFS

	[ -s /etc/vconsole.conf ] && . /etc/vconsole.conf
	COLOR_0="${COLOR_0:-00,00,00}"
	COLOR_1="${COLOR_1:-aa,00,00}"
	COLOR_2="${COLOR_2:-00,aa,00}"
	COLOR_3="${COLOR_3:-aa,55,00}"
	COLOR_4="${COLOR_4:-00,00,aa}"
	COLOR_5="${COLOR_5:-aa,00,aa}"
	COLOR_6="${COLOR_6:-00,aa,aa}"
	COLOR_7="${COLOR_7:-aa,aa,aa}"
	COLOR_8="${COLOR_8:-55,55,55}"
	COLOR_9="${COLOR_9:-ff,55,55}"
	COLOR_10="${COLOR_10:-55,ff,55}"
	COLOR_11="${COLOR_11:-ff,ff,55}"
	COLOR_12="${COLOR_12:-55,55,ff}"
	COLOR_13="${COLOR_13:-ff,55,ff}"
	COLOR_14="${COLOR_14:-55,ff,ff}"
	COLOR_15="${COLOR_15:-ff,ff,ff}"

	__i=0
	while [ "$__i" -le 15 ]
	do
		eval "__rgb=\"\$COLOR_$__i\""
		__j=0
		IFS=','; for __c in $__rgb
		do
			[ "$__j" -eq 0 ] && __red="${__red:-$(_hex2dec "$__c")}${__red:+,$(_hex2dec "$__c")}"
			[ "$__j" -eq 1 ] && __grn="${__grn:-$(_hex2dec "$__c")}${__grn:+,$(_hex2dec "$__c")}"
			[ "$__j" -eq 2 ] && __blu="${__blu:-$(_hex2dec "$__c")}${__blu:+,$(_hex2dec "$__c")}"
			__j="$((__j + 1))"
		done
		__i="$((__i + 1))"
	done
	printf "%s\n" "$__red" "$__grn" "$__blu"
}

## set the console colors
## requires root privileges (for setvtrgb)
## $1: target tty
_set() {
	local __target_tty="$1"
	_parse | setvtrgb -C"$__target_tty" -
}

## $1: mode of operation (defaults to get)
## $2: target tty for 'set' (defaults to current tty)
_main() {
	local __mode="$1"
	local __target_tty="${2:-$(tty)}"
	case "$__mode" in
	''|get) _get ;;
	parse) _parse ;;
	set)
		if ! _set "$__target_tty"
		then
			echo "$_SELF: requires root privileges" >&2
			exit 4
		fi
	;;
	*)
		echo "$_SELF: invalid mode of operation -- '$__mode'" >&2
		_usage 2
	;;
	esac
}

## parse the options
while true
do
	case "$1" in
	-h|--help|--usage) _usage ;;
	-*|--*) _usage 2 "$1" ;;
	--) shift; break ;;
	*) break ;;
	esac
done

_main "$@"
