#!/usr/bin/env bash
# vim:ft=bash:noet:ts=3:sw=3:

if [[ -n "$DEBUG" ]] ; then
	set -x
fi

# Who am I?
_SELF="${0##*/}"

# [$1: EXIT CODE (0)]
function _usage { local ec="${1:-0}"
	local msg
	IFS='' read -r -d '' msg << ENDUSAGEMSG
Usage: $_SELF [-C CONSOLE] [-E FILE] [MODE]

  MODES:
   show*      show the configured and current colors
   get        get the configured colors
   set        set the colors

  -C CONSOLE  console to use
  -E FILE     environment file

  -h          display this help and exit
ENDUSAGEMSG
	printf '%s' "$msg"
	exit "$ec"
}

# show the configured and current colors
# $1: ENVFILE
function _show { local -r envfile="$1"
	local var value file ; local -a colors
	if [[ -f "$envfile" ]] ; then
		while IFS='=' read -r var value ; do
			if [[ "$var" == THEME ]] ; then
				echo "SYSTEM: THEME=$value"
			elif [[ "$var" == COLORS ]] ; then
				echo "SYSTEM: COLORS=$value"
			fi
		done < "$envfile"
	else
		echo "$_SELF: $envfile: No such file" >&2
	fi
	mapfile -t colors < <( getvtrgb | vtrgb2hex )
	printf 'CURRENT: COLORS="%s"\n' "${colors[*]}"
}

# get the configured colors
# $@: ENVFILE
function _get { local -r envfile="$1"
	local var value file s ; local -a colors
	if [[ -f "$envfile" ]] ; then
		while IFS='=' read -r var value ; do
			if [[ "$var" == THEME ]] ; then
				file="${value//\"/}"
				if [[ -f "$file" ]] ; then
					IFS='' read -r -d '' s < "$file"
					printf '%s' "$s"
				else
					echo "$_SELF: $file: No such file" >&2
					return 1
				fi
				break
			elif [[ "$var" == COLORS ]] ; then
				printf '%s\n' ${value//\"/}
				break
			fi
		done < "$envfile"
	else
		echo "$_SELF: $envfile: No such file" >&2
		return 1
	fi
}

# set the colors
# $@: ENVFILE CONSOLE
function _set { local -r envfile="$1" console="$2"
	local var value file ; local -a colors
	if [[ -f "$envfile" ]] ; then
		while IFS='=' read -r var value ; do
			if [[ "$var" == THEME ]] ; then
				file="${value//\"/}"
				if [[ -f "$file" ]] ; then
					setvtrgb -C "$console" "$file"
				else
					echo "$_SELF: $file: No such file" >&2
					return 1
				fi
				break
			elif [[ "$var" == COLORS ]] ; then
				printf '%s\n' ${value//\"/} | setvtrgb -C "$console" -
				break
			fi
		done < "$envfile"
	else
		echo "$_SELF: $envfile: No such file" >&2
		return 1
	fi
}

# $@: [-C CONSOLE] [-E ENVFILE] [MODE (show)]
function main {
	local console envfile OPT OPTARG OPTIND
	while getopts ':C:E:h' OPT ; do
		case "$OPT" in
			'C' ) console="$OPTARG" ;;
			'E' ) envfile="$OPTARG" ;;
			'h' ) _usage ;;
			'?' )
				echo "$_SELF: invalid option -- '$OPTARG'" >&2
				_usage 2
			;;
			':' )
				echo "$_SELF: missing argument -- '$OPTARG'" >&2
				_usage 2
			;;
		esac
	done ; shift "$(( OPTIND - 1 ))" ; mode="$1"
	: ${mode:=get}
	case "$mode" in
		show ) _show "${envfile:-@ENVFILE@}" ;;
		get ) _get "${envfile:-@ENVFILE@}" ;;
		set ) _set "${envfile:-@ENVFILE@}" "${console:-@TTY@}" ;;
		* )
			echo "$_SELF: invalid mode -- '$mode'" >&2
			_usage 2
		;;
	esac
} ; main "$@"
